name: dockercompose16790737792892345442
services:
  agentservice:
    build:
      context: D:\Controlcy
      dockerfile: AgentService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: AgentService
      target: base
    container_name: AgentService
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      NUGET_FALLBACK_PACKAGES: ""
    image: agentservice:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/AgentService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: D:\Controlcy\AgentService
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
  controlcyserver:
    build:
      context: D:\Controlcy
      dockerfile: ControlcyServer/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ControlcyServer
      target: base
    container_name: ControlcyServer
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: controlcyserver:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/ControlcyServer.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "6666"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "6665"
      protocol: tcp
    - mode: ingress
      target: 6668
      published: "80"
      protocol: tcp
    - mode: ingress
      target: 6669
      published: "443"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: D:\Controlcy\ControlcyServer
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\Controlcy
      target: /src
      bind:
        create_host_path: true
  dbwriterservice:
    build:
      context: D:\Controlcy
      dockerfile: DbWriterService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DbWriterService
      target: base
    container_name: DbWriterService
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      NUGET_FALLBACK_PACKAGES: ""
    image: dbwriterservice:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/DbWriterService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: D:\Controlcy\DbWriterService
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\blackneuron\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
  pgadmin:
    container_name: pgadmin_cntr
    environment:
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5050"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: pgadmin
      target: /var/lib/pgadmin
      volume: {}
  postgres:
    container_name: postgres_cntr
    environment:
      PGDATA: /data/postgres
      POSTGRES_PASSWORD: "31415"
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: postgres
      target: /data/postgres
      volume: {}
  rabbitmq:
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_PASS: pass
      RABBITMQ_DEFAULT_USER: user
    image: rabbitmq:3-management
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
networks:
  default:
    name: dockercompose16790737792892345442_default
volumes:
  pgadmin:
    name: dockercompose16790737792892345442_pgadmin
  postgres:
    name: dockercompose16790737792892345442_postgres